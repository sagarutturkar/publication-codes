names(anno) = c("class", "clusterID")
anno = dplyr::select(anno, -c("class"))
anno = anno %>%
rownames_to_column( "ID")  %>%
dplyr::left_join(metadata)   %>%
column_to_rownames("ID")
# "Normal" =   "#00DAE0",
# "Tumor" = "#b2182b"
# "Sensitive" = "#B7BA7D",
# "Resistant" = "#807dba"
# "Pre" = "#74c476"
# "Post" = "#fd8d3c"
anno_colors = list(Clinical.Outcome = c(Normal = "#00DAE0", Resistant = "#807dba", Sensitive = "#B7BA7D"),
Condition = c(Normal = "#00DAE0", Post  = "#fd8d3c", Pre  = "#74c476"),
Sample_Type = c(Normal = "#00DAE0", Tumor  = "#b2182b")
)
pheatmap(x, cluster_rows = T, cluster_cols = T,
breaks = breaksList, color = BLUE,
annotation_col = anno, annotation_colors = anno_colors, border_color = "black")
pheatmap(x, cluster_rows = T, cluster_cols = T,
breaks = breaksList, color = BLUE,
annotation_col = anno, annotation_colors = anno_colors, border_color = "black", scale = "row")
pheatmap(x, cluster_rows = T, cluster_cols = T,
breaks = breaksList, color = BLUE,
annotation_col = anno, annotation_colors = anno_colors, border_color = "black")
pheatmap(x, cluster_rows = T, cluster_cols = T,
breaks = breaksList, color = BLUE,
annotation_col = anno, annotation_colors = anno_colors, border_color = "red")
pheatmap(x)
pheatmap(x, cluster_rows = T, cluster_cols = T)
pheatmap(x, cluster_rows = T, cluster_cols = T,
breaks = breaksList, color = BLUE)
pheatmap(x, cluster_rows = T, cluster_cols = T,
breaks = breaksList, color = BLUE,
annotation_col = anno, annotation_colors = anno_colors)
pheatmap(x, cluster_rows = T, cluster_cols = T,
breaks = breaksList, color = BLUE,
annotation_col = anno)
head(anno)
pheatmap(x, cluster_rows = T, cluster_cols = T,  border_color = "grey",
breaks = breaksList, color = BLUE,
annotation_col = anno, annotation_colors = anno_colors)
anno
metadata = openxlsx::read.xlsx(xlsxFile  = "Z:/PCCR/Nadia_Lanman/showalter_grant_2023/Info_2023.xlsx", sheet = "Info_2023")
head(metadata)
tumor_samples = metadata %>%
dplyr::filter(Sample_Type == "Tumor")
tumor_samples
setwd("Z:/PCCR/Nadia_Lanman/showalter_grant_2023/consensus_clustering/")
TPM = readRDS(file = "TPM.rds")
TPM[1:5,1:5]
DE_genes = read.table(file = "Z:/PCCR/Nadia_Lanman/showalter_grant_2023/consensus_clustering/Resistant_vs_Sensitive.DE_edgeR_5PCT.TXT", header = T)
metadata = openxlsx::read.xlsx(xlsxFile  = "Z:/PCCR/Nadia_Lanman/showalter_grant_2023/Info_2023.xlsx", sheet = "Info_2023")
tumor_samples = metadata %>%
dplyr::filter(Sample_Type == "Tumor")
TPM = TPM %>%
rownames_to_column("Gene_ID") %>%
dplyr::filter(Gene_ID %in% DE_genes$Gene_ID) %>% # keep only the top500 variable genes
column_to_rownames("Gene_ID") %>%
dplyr::select(all_of(tumor_samples$ID))
setwd("Z:/PCCR/Nadia_Lanman/showalter_grant_2023/consensus_clustering/")
TPM = readRDS(file = "TPM.rds")
TPM[1:5,1:5]
DE_genes = read.table(file = "Z:/PCCR/Nadia_Lanman/showalter_grant_2023/consensus_clustering/Resistant_vs_Sensitive.DE_edgeR_5PCT.TXT", header = T)
metadata = openxlsx::read.xlsx(xlsxFile  = "Z:/PCCR/Nadia_Lanman/showalter_grant_2023/Info_2023.xlsx", sheet = "Info_2023")
tumor_samples = metadata %>%
dplyr::filter(Sample_Type == "Tumor")
TPM = TPM %>%
rownames_to_column("Gene_ID") %>%
dplyr::filter(Gene_ID %in% DE_genes$Gene_ID) %>% # keep only the top500 variable genes
column_to_rownames("Gene_ID") %>%
dplyr::select(all_of(tumor_samples$ID))
dim(TPM)
setwd("Z:/PCCR/Nadia_Lanman/showalter_grant_2023/consensus_clustering/")
TPM = readRDS(file = "TPM.rds")
TPM[1:5,1:5]
DE_genes = read.table(file = "Z:/PCCR/Nadia_Lanman/showalter_grant_2023/consensus_clustering/Resistant_vs_Sensitive.DE_edgeR_5PCT.TXT", header = T)
metadata = openxlsx::read.xlsx(xlsxFile  = "Z:/PCCR/Nadia_Lanman/showalter_grant_2023/Info_2023.xlsx", sheet = "Info_2023")
tumor_samples = metadata %>%
dplyr::filter(Sample_Type == "Tumor")
TPM = TPM %>%
rownames_to_column("Gene_ID") %>%
dplyr::filter(Gene_ID %in% DE_genes$Gene_ID) %>% # keep only the top500 variable genes
column_to_rownames("Gene_ID") %>%
dplyr::select(all_of(tumor_samples$ID))
dim(TPM)
TPM[1:5,1:5]
x = apply(as.matrix.noquote(TPM),2,as.numeric)
rownames(x) = rownames(TPM)
x[1:5,1:5]
dim(x)
results = ConsensusClusterPlus(x, maxK=6, reps=1000, pItem=0.8, pFeature=1,
title="DE_RES_vs_SEN_NO_normal",clusterAlg="hc",
distance="pearson", seed=1262118388.71279, plot="png",
writeTable = T)
saveRDS(results, file = "Z:/PCCR/Nadia_Lanman/showalter_grant_2023/consensus_clustering/DE_RES_vs_SEN_NO_normal/results.rds")
setwd("Z:/PCCR/Nadia_Lanman/showalter_grant_2023/consensus_clustering/DE_RES_vs_SEN_NO_normal")
BLUE = brewer.pal(n = 10, name = "Blues")
breaksList = seq(0, 1, by = 0.1)
results = readRDS(file = "results.rds")
x = as.data.frame(results[[5]]$consensusMatrix)
colnames(x) = names(results[[5]]$consensusClass)
rownames(x) = names(results[[5]]$consensusClass)
metadata = openxlsx::read.xlsx(xlsxFile  = "Z:/PCCR/Nadia_Lanman/showalter_grant_2023/Info_2023.xlsx", sheet = "Info_2023")
metadata = metadata %>%
dplyr::select(all_of(c("ID", "Sample_Type", "Condition", "Clinical.Outcome")))
anno = as.data.frame(results[[5]]$consensusClass)
anno$ID = paste0("cluster_", anno$`results[[5]]$consensusClass`)
names(anno) = c("class", "clusterID")
anno = dplyr::select(anno, -c("class"))
anno = anno %>%
rownames_to_column( "ID")  %>%
dplyr::left_join(metadata)   %>%
column_to_rownames("ID")
# "Normal" =   "#00DAE0",
# "Tumor" = "#b2182b"
# "Sensitive" = "#B7BA7D",
# "Resistant" = "#807dba"
# "Pre" = "#74c476"
# "Post" = "#fd8d3c"
anno_colors = list(Clinical.Outcome = c(Normal = "#00DAE0", Resistant = "#807dba", Sensitive = "#B7BA7D"),
Condition = c(Normal = "#00DAE0", Post  = "#fd8d3c", Pre  = "#74c476"),
Sample_Type = c(Normal = "#00DAE0", Tumor  = "#b2182b")
)
pheatmap(x, cluster_rows = T, cluster_cols = T,
breaks = breaksList, color = BLUE,
annotation_col = anno, annotation_colors = anno_colors)
setwd("Z:/PCCR/Nadia_Lanman/showalter_grant_2023/consensus_clustering/DE_RES_vs_SEN")
BLUE = brewer.pal(n = 10, name = "Blues")
breaksList = seq(0, 1, by = 0.1)
results = readRDS(file = "results.rds")
x = as.data.frame(results[[6]]$consensusMatrix)
colnames(x) = names(results[[6]]$consensusClass)
rownames(x) = names(results[[6]]$consensusClass)
metadata = openxlsx::read.xlsx(xlsxFile  = "Z:/PCCR/Nadia_Lanman/showalter_grant_2023/Info_2023.xlsx", sheet = "Info_2023")
metadata = metadata %>%
dplyr::select(all_of(c("ID", "Sample_Type", "Condition", "Clinical.Outcome")))
anno = as.data.frame(results[[6]]$consensusClass)
anno$ID = paste0("cluster_", anno$`results[[6]]$consensusClass`)
names(anno) = c("class", "clusterID")
anno = dplyr::select(anno, -c("class"))
anno = anno %>%
rownames_to_column( "ID")  %>%
dplyr::left_join(metadata)   %>%
column_to_rownames("ID")
# "Normal" =   "#00DAE0",
# "Tumor" = "#b2182b"
# "Sensitive" = "#B7BA7D",
# "Resistant" = "#807dba"
# "Pre" = "#74c476"
# "Post" = "#fd8d3c"
anno_colors = list(Clinical.Outcome = c(Normal = "#00DAE0", Resistant = "#807dba", Sensitive = "#B7BA7D"),
Condition = c(Normal = "#00DAE0", Post  = "#fd8d3c", Pre  = "#74c476"),
Sample_Type = c(Normal = "#00DAE0", Tumor  = "#b2182b")
)
pheatmap(x, cluster_rows = T, cluster_cols = T,
breaks = breaksList, color = BLUE,
annotation_col = anno, annotation_colors = anno_colors)
head(anno)
anno = anno %>%
dplyr::select(all_of(c("clusterID", "Clinical.Outcome")))
head(anno)
setwd("Z:/PCCR/Nadia_Lanman/showalter_grant_2023/consensus_clustering/DE_RES_vs_SEN_NO_normal")
BLUE = brewer.pal(n = 10, name = "Blues")
breaksList = seq(0, 1, by = 0.1)
results = readRDS(file = "results.rds")
x = as.data.frame(results[[5]]$consensusMatrix)
colnames(x) = names(results[[5]]$consensusClass)
rownames(x) = names(results[[5]]$consensusClass)
metadata = openxlsx::read.xlsx(xlsxFile  = "Z:/PCCR/Nadia_Lanman/showalter_grant_2023/Info_2023.xlsx", sheet = "Info_2023")
metadata = metadata %>%
dplyr::select(all_of(c("ID", "Sample_Type", "Condition", "Clinical.Outcome")))
anno = as.data.frame(results[[5]]$consensusClass)
anno$ID = paste0("cluster_", anno$`results[[5]]$consensusClass`)
names(anno) = c("class", "clusterID")
anno = dplyr::select(anno, -c("class"))
anno = anno %>%
rownames_to_column( "ID")  %>%
dplyr::left_join(metadata)   %>%
column_to_rownames("ID")
anno = anno %>%
dplyr::select(all_of(c("clusterID", "Clinical.Outcome")))
# "Normal" =   "#00DAE0",
# "Tumor" = "#b2182b"
# "Sensitive" = "#B7BA7D",
# "Resistant" = "#807dba"
# "Pre" = "#74c476"
# "Post" = "#fd8d3c"
anno_colors = list(Clinical.Outcome = c(Normal = "#00DAE0", Resistant = "#807dba", Sensitive = "#B7BA7D"),
Condition = c(Normal = "#00DAE0", Post  = "#fd8d3c", Pre  = "#74c476"),
Sample_Type = c(Normal = "#00DAE0", Tumor  = "#b2182b")
)
pheatmap(x, cluster_rows = T, cluster_cols = T,
breaks = breaksList, color = BLUE,
annotation_col = anno, annotation_colors = anno_colors)
setwd("Z:/PCCR/Nadia_Lanman/showalter_grant_2023/consensus_clustering/DE_RES_vs_SEN_NO_normal")
BLUE = brewer.pal(n = 10, name = "Blues")
breaksList = seq(0, 1, by = 0.1)
results = readRDS(file = "results.rds")
x = as.data.frame(results[[5]]$consensusMatrix)
colnames(x) = names(results[[5]]$consensusClass)
rownames(x) = names(results[[5]]$consensusClass)
metadata = openxlsx::read.xlsx(xlsxFile  = "Z:/PCCR/Nadia_Lanman/showalter_grant_2023/Info_2023.xlsx", sheet = "Info_2023")
metadata = metadata %>%
dplyr::select(all_of(c("ID", "Sample_Type", "Condition", "Clinical.Outcome")))
anno = as.data.frame(results[[5]]$consensusClass)
anno$ID = paste0("cluster_", anno$`results[[5]]$consensusClass`)
names(anno) = c("class", "clusterID")
anno = dplyr::select(anno, -c("class"))
anno = anno %>%
rownames_to_column( "ID")  %>%
dplyr::left_join(metadata)   %>%
column_to_rownames("ID")
anno = anno %>%
dplyr::select(all_of(c("clusterID", "Clinical.Outcome", "Sample_Type")))
# "Normal" =   "#00DAE0",
# "Tumor" = "#b2182b"
# "Sensitive" = "#B7BA7D",
# "Resistant" = "#807dba"
# "Pre" = "#74c476"
# "Post" = "#fd8d3c"
anno_colors = list(Clinical.Outcome = c(Normal = "#00DAE0", Resistant = "#807dba", Sensitive = "#B7BA7D"),
Condition = c(Normal = "#00DAE0", Post  = "#fd8d3c", Pre  = "#74c476"),
Sample_Type = c(Normal = "#00DAE0", Tumor  = "#b2182b")
)
pheatmap(x, cluster_rows = T, cluster_cols = T,
breaks = breaksList, color = BLUE,
annotation_col = anno, annotation_colors = anno_colors)
setwd("Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test")
x = readRDS(file = "kidsFirst_cibersort.rds")
x[1:5,1:5]
colnames(x)
dim(colnames(x))
length(colnames(x))
kidsFirst_metadata = openxlsx::read.xlsx(xlsxFile  = "Z:/PCCR/knappd/Glioma_ICDC/Mutation_Analysis/All_metadata.RNAseq.xlsx", sheet = "KidsFirst")
head(kidsFirst_metadata)
table(kidsFirst_metadata$Sample)
table(kidsFirst_metadata$Selected)
getwd()
GTEX_cibersort = readRDS(file = "GTEX_cibersort.rds")
dim(GTEX_cibersort)
GTEX_cibersort[1:5,1:5]
setwd("Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test")
CibersortX = readRDS(file = "cibersortX.long.rds")
dim(CibersortX)
head(CibersortX)
table(CibersortX$Database)
table(CibersortX$Database)/22
x = CibersortX %>% dplyr::filter(Classification == "Adult")
head(x)
table(x$Diagnosis)/22
table(x$Condition)/22
library(dplyr)
library(tidyverse)
library(knitr)
library(kableExtra)
library(data.table)
library(rstatix)
library(ggpubr)
library(scales)
library(cowplot)
library(ggsignif)
setwd("Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test")
CibersortX = readRDS(file = "cibersortX.long.rds")
CibersortX = CibersortX %>%
dplyr::filter(Condition != "Undefined")
head(CibersortX)
head(CibersortX)
head(dplyr::filter(CibersortX, Species == "human"))
table(CibersortX$Species)
head(dplyr::filter(CibersortX, Species == "Human"))
head(dplyr::filter(CibersortX, Database == "GTEX"))
x = dplyr::filter(CibersortX, Database == "GTEX")
dim(x)
unique(x$Sample)
length(unique(x$Sample))
table(CibersortX$Database)
GTEX = dplyr::filter(CibersortX, Database == "GTEX")
TCGA.GBM = dplyr::filter(CibersortX, Database == "TCGA.GBM")
TCGA.LGG = dplyr::filter(CibersortX, Database == "TCGA.LGG")
length(unique(GTEX$Sample))
length(unique(TCGA.GBM$Sample))
length(unique(TCGA.LGG$Sample))
length(unique(GTEX$Sample))      # 464
length(unique(TCGA.GBM$Sample))  # 156
length(unique(TCGA.LGG$Sample))  # 509
length(unique(ICDC$Sample))  # 509
GTEX = dplyr::filter(CibersortX, Database == "GTEX")
TCGA.GBM = dplyr::filter(CibersortX, Database == "TCGA.GBM")
TCGA.LGG = dplyr::filter(CibersortX, Database == "TCGA.LGG")
ICDC = dplyr::filter(CibersortX, Database == "ICDC")
Barkbase = dplyr::filter(CibersortX, Database == "Barkbase")
KidsFirst = dplyr::filter(CibersortX, Database == "KidsFirst")
St_Jude = dplyr::filter(CibersortX, Database == "St_Jude")
length(unique(GTEX$Sample))      # 464
length(unique(TCGA.GBM$Sample))  # 156
length(unique(TCGA.LGG$Sample))  # 509
length(unique(ICDC$Sample))  # 509
length(unique(Barkbase$Sample))  # 509
length(unique(KidsFirst$Sample))  # 509
length(unique(St_Jude$Sample))  # 509
head(unique(TCGA.GBM$Sample))
head(unique(TCGA.LGG$Sample))
setwd("Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test")
TCGA_metadata = openxlsx::read.xlsx(xlsxFile  = "Z:/PCCR/knappd/Glioma_ICDC/FInal_Metadata_2023/", sheet = "TCGA_all_used_metadata")
TCGA_metadata = read.csv(file = "Z:/PCCR/knappd/Glioma_ICDC/FInal_Metadata_2023/TCGA_all_used_metadata.csv")
head(TCGA_metadata)
?gsub
head(gsub('-', '.', TCGA_metadata$Patient.ID))
setwd("Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test")
TCGA_metadata = read.csv(file = "Z:/PCCR/knappd/Glioma_ICDC/FInal_Metadata_2023/TCGA_all_used_metadata.csv")
TCGA_metadata$Patient.ID = gsub('-', '.', TCGA_metadata$Patient.ID)
TCGA_metadata$Sample.ID = gsub('-', '.', TCGA_metadata$Sample.ID)
TCGA_metadata = TCGA_metadata %>%
dplyr::select(all_of(c(1:3)))
head(TCGA_metadata)
setwd("Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test")
TCGA_metadata = read.csv(file = "Z:/PCCR/knappd/Glioma_ICDC/FInal_Metadata_2023/TCGA_all_used_metadata.csv")
head(TCGA_metadata)
setwd("Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test")
TCGA_metadata = read.csv(file = "Z:/PCCR/knappd/Glioma_ICDC/FInal_Metadata_2023/TCGA_all_used_metadata.csv", row.names = F)
setwd("Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test")
TCGA_metadata = read.csv(file = "Z:/PCCR/knappd/Glioma_ICDC/FInal_Metadata_2023/TCGA_all_used_metadata.csv", row.names = F)
setwd("Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test")
TCGA_metadata = read.csv(file = "Z:/PCCR/knappd/Glioma_ICDC/FInal_Metadata_2023/TCGA_all_used_metadata.csv")
TCGA_metadata$Patient.ID = gsub('-', '.', TCGA_metadata$Patient.ID)
TCGA_metadata$Sample.ID = gsub('-', '.', TCGA_metadata$Sample.ID)
TCGA_metadata = TCGA_metadata %>%
dplyr::select(all_of(c(2:4)))
head(TCGA_metadata)
dim(TCGA_metadata)
length(unique(TCGA_metadata$Patient.ID))
dim(TCGA_metadata)
length(unique(TCGA_metadata$Patient.ID))
head(unique(TCGA.GBM$Sample))
head(unique(TCGA.LGG$Sample))
head(CibersortX)
head(CibersortX %>%
dplyr::select(all_of(c(2))) )
x = CibersortX %>%
dplyr::select(all_of(c(2))) %>%
tidyr::separate(Sample, into = c("P1", "P2", "P3"), sep = '.', remove = F)
x = CibersortX %>%
dplyr::select(all_of(c(2))) %>%
tidyr::separate(Sample, into = c("P1", "P2", "P3"), sep = '.', remove = F, extra = "drop")
head(x)
tail(x)
x$P1
head(CibersortX)
x = CibersortX %>%
tidyr::separate(Sample, into = c("P1", "P2", "P3"), sep = '.', remove = F, extra = "drop") %>%
tidyr::unite("Sample.short",  c("P1", "P2", "P3"), remove = T)
head(x)
x = CibersortX %>%
tidyr::separate(Sample, into = c("P1", "P2", "P3"), sep = '.', remove = F, extra = "drop") %>%
tidyr::unite("Sample.short",  c("P1", "P2", "P3"), sep = '.',remove = T)
head(x)
dplyr::filter(x, Database = "TCGA.LGG")
dplyr::filter(x, Database == "TCGA.GBM")
head(TCGA.GBM)
head(TCGA.GBM %>%
tidyr::separate(Sample, into = c("P1", "P2", "P3"), sep = '.', remove = F, extra = "drop"))
head(TCGA.GBM %>%
tidyr::separate(Sample, into = c("P1", "P2", "P3"), sep = "\.", remove = F, extra = "drop"))
head(TCGA.GBM %>%
tidyr::separate(Sample, into = c("P1", "P2", "P3"), sep = "\\.", remove = F, extra = "drop"))
x = TCGA.GBM %>%
tidyr::separate(Sample, into = c("P1", "P2", "P3"), sep = "\\.", remove = F, extra = "drop") %>%
tidyr::unite("Sample.short",  c("P1", "P2", "P3"), sep = '.',remove = T)
head(x)
unique(x$Sample.short)
x = CibersortX %>%
tidyr::separate(Sample, into = c("P1", "P2", "P3"), sep = "\\.", remove = F, extra = "drop") %>%
tidyr::unite("Sample.short",  c("P1", "P2", "P3"), sep = '.',remove = T)
unique(x$Sample.short)
head(x)
dplyr::filter(x, Database = "TCGA.LGG")
dplyr::filter(x, Database == "TCGA.LGG")
head(x %>%
dplyr::mutate(sample.new.name = if_else(Database == "TCGA.GBM" , Sample.short, Sample)))
y = x %>%
dplyr::mutate(sample.new.name = if_else(Database == "TCGA.GBM" , Sample.short, Sample))
tdplyr::filter(y, Database == "TCGA.GBM")
t = dplyr::filter(y, Database == "TCGA.GBM")
head(t)
unique(t$sample.new.name)
dim(y)
head(y)
library(dplyr)
library(tidyverse)
library(knitr)
library(kableExtra)
library(data.table)
library(rstatix)
library(ggpubr)
library(scales)
library(cowplot)
library(ggsignif)
setwd("Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test")
CibersortX = readRDS(file = "cibersortX.long.rds")
CibersortX = CibersortX %>%
dplyr::filter(Condition != "Undefined")
head(CibersortX)
GTEX = dplyr::filter(CibersortX, Database == "GTEX")
TCGA.GBM = dplyr::filter(CibersortX, Database == "TCGA.GBM")
TCGA.LGG = dplyr::filter(CibersortX, Database == "TCGA.LGG")
ICDC = dplyr::filter(CibersortX, Database == "ICDC")
Barkbase = dplyr::filter(CibersortX, Database == "Barkbase")
KidsFirst = dplyr::filter(CibersortX, Database == "KidsFirst")
St_Jude = dplyr::filter(CibersortX, Database == "St_Jude")
length(unique(GTEX$Sample))      # 464
length(unique(TCGA.GBM$Sample))  # 156
length(unique(TCGA.LGG$Sample))  # 509
length(unique(ICDC$Sample))      # 39
length(unique(Barkbase$Sample))  # 5
length(unique(KidsFirst$Sample)) # 346
length(unique(St_Jude$Sample))   # 302
CibersortX = CibersortX %>%
tidyr::separate(Sample, into = c("P1", "P2", "P3"), sep = "\\.", remove = F, extra = "drop") %>%
tidyr::unite("Sample.short",  c("P1", "P2", "P3"), sep = '.',remove = T)
CibersortX = CibersortX %>%
dplyr::mutate(sample.new.name = if_else(Database == "TCGA.GBM" , Sample.short, Sample))
head(CibersortX)
head(TCGA.GBM)
my_list = list(TCGA_metadata = TCGA_metadata$Patient.ID, CB = CibersortX$sample.new.name)
ggvenn(my_list)
library(ggvenn)
my_list = list(TCGA_metadata = TCGA_metadata$Patient.ID, CB = CibersortX$sample.new.name)
ggvenn(my_list)
dim(CibersortX)
length(unique(CibersortX$Sample))
length(unique(TCGA.GBM$Sample))
509+156
216 + 390
setwd("Z:/PCCR/Andrisani/6442_Andrisani_PublicRNAseq_2023/DE_Analysis/C1")
my_genes = c("Ddx5",
"Fzd7", "Fzd1", "Fzd10", "Fzd2", "Wnt11", "Wnt7b", "Wnt9a", "Lrp5", "Dvl1", "Dvl2", "Dvl3", "Axin1",
"Nfkb1", "Nfkb2", "Map3k14", "Relb", "Nrf1", "Nrf2",
"Nuak1", "Nuak2", "Axl")
DE_table = readRDS(file = "edgeR_DE.rds")
my_data = DE_table %>%
dplyr::filter(Gene_ID %in% my_genes)
require(data.table)
library(dplyr)
library(tidyverse)
library(pheatmap)
library(RColorBrewer)
library(knitr)
library(kableExtra)
library(stringr)
library(openxlsx)
library(EnhancedVolcano)
library(ggvenn)
library(pheatmap)
setwd("Z:/PCCR/Andrisani/6442_Andrisani_PublicRNAseq_2023/counts")
setwd("Z:/PCCR/Andrisani/6442_Andrisani_PublicRNAseq_2023/DE_Analysis/C1")
my_genes = c("Ddx5",
"Fzd7", "Fzd1", "Fzd10", "Fzd2", "Wnt11", "Wnt7b", "Wnt9a", "Lrp5", "Dvl1", "Dvl2", "Dvl3", "Axin1",
"Nfkb1", "Nfkb2", "Map3k14", "Relb", "Nrf1", "Nrf2",
"Nuak1", "Nuak2", "Axl")
DE_table = readRDS(file = "edgeR_DE.rds")
my_data = DE_table %>%
dplyr::filter(Gene_ID %in% my_genes)
dplyr::filter(my_data, FDR <= 0.05)
#write.table(my_data, file = "custom_genes.txt", sep = "\t", quote = F, row.names = F)
length(my_genes)
intersect(my_genes, my_data$Gene_ID)
setdiff(my_genes, my_data$Gene_ID)
dim(my_data)
509+156
509+156
setwd("Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test/immuneDeconv_with_final_metadata")
GBM_cibersort = readRDS(file = "Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test/GBM_cibersort.rds")
GTEX_cibersort = readRDS(file = "Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test/GTEX_cibersort.rds")
PUNormal_cibersort = readRDS(file = "Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test/PUNormal_cibersort.rds")
barkbase_cibersort = readRDS(file = "Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test/barkbase_cibersort.rds")
ICDC_cibersort = readRDS(file = "Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test/ICDC_cibersort.rds")
LGG_cibersort = readRDS(file = "Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test/immuneDeconv_with_final_metadata/LGG_cibersort.rds")
kidsFirst_cibersort = readRDS(file = "Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test/immuneDeconv_with_final_metadata/kidsFirst_cibersort.rds")
GBM_cibersort = as.data.frame(GBM_cibersort)
LGG_cibersort = as.data.frame(LGG_cibersort)
GTEX_cibersort = as.data.frame(GTEX_cibersort)
PUNormal_cibersort = as.data.frame(PUNormal_cibersort)
barkbase_cibersort = as.data.frame(barkbase_cibersort)
ICDC_cibersort = as.data.frame(ICDC_cibersort)
kidsFirst_cibersort = as.data.frame(kidsFirst_cibersort)
GBM_cibersort = column_to_rownames(GBM_cibersort, "cell_type")
library(dplyr)
library(tidyverse)
library(knitr)
library(kableExtra)
library(data.table)
library(rstatix)
library(ggpubr)
library(scales)
library(cowplot)
library(ggsignif)
library(hgnc)
library(immunedeconv)
library(openxlsx)
cibersort_binary = "Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test/CIBERSORT.R"
cibersort_mat = "Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test/LM22.txt"
setwd("Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test")
setwd("Z:/PCCR/knappd/Glioma_ICDC/RNASeq_Analysis/immunedeconv_test/immuneDeconv_with_final_metadata")
library(ggplot2)
library(ggsignif)
CibersortX = readRDS(file = "All.cibersort.long.rds")
cibersort.long = CibersortX
table(cibersort.long$Study)/22
453+153
setwd("C:/Users/sutturka/Documents/GitHub/publication-codeshare/Front.Immunol.2024")
?merge()
